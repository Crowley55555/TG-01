import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from config import TOKEN

import random
import aiohttp
from config import WEATHER_API_KEY
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from gtts import gTTS
import os
import re
from deep_translator import GoogleTranslator


bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command('doc'))
async def doc(message: Message):
    doc = FSInputFile('file.pdf')
    await bot.send_document(message.chat.id, doc)

@dp.message(Command('video'))
async def video(message: Message):
    await bot.send_chat_action(message.chat.id, action='upload_video')
    video = FSInputFile('video.mp4')
    await bot.send_video(message.chat.id, video)

@dp.message(Command('voice'))
async def voice(message: Message):
    await bot.send_chat_action(message.chat.id, action='upload_voice')
    voice = FSInputFile('voice.ogg')
    await message.answer_voice(voice)


@dp.message(Command('audio'))
async def audio(message: Message):
    await bot.send_chat_action(message.chat.id, action='upload_audio')
    audio = FSInputFile('Dirty Magic.m4a')
    await bot.send_audio(message.chat.id, audio)

@dp.message(Command('training'))
async def training(message: Message):

    traning_list = [
        {
            "title": "üí™ <b>–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (5–Ω–∞5)</b>",
            "description": (
                "<i>–¶–µ–ª—å:</i> –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–∏–ª—ã –≤ –±–∞–∑–æ–≤—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è—Ö\n\n"
                "üèãÔ∏è <b>–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π</b> ‚Äì 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 5 —Ä–∞–∑\n"
                "üõå <b>–ñ–∏–º —à—Ç–∞–Ω–≥–∏ –ª—ë–∂–∞</b> ‚Äì 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 5 —Ä–∞–∑\n"
                "‚¨ÜÔ∏è <b>–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 5 —Ä–∞–∑\n"
                "üôå <b>–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ –º–∞–∫—Å–∏–º—É–º—É\n"
                "‚è± <b>–ü–ª–∞–Ω–∫–∞</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 60 —Å–µ–∫—É–Ω–¥"
            )
        },
        {
            "title": "üî• <b>–ö—Ä—É–≥–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (3 –∫—Ä—É–≥–∞)</b>",
            "description": (
                "<i>–¶–µ–ª—å:</i> –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∏ –∂–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏–µ\n\n"
                "üê∏ <b>–ë—ë—Ä–ø–∏</b> ‚Äì 15 —Ä–∞–∑\n"
                "üèÉ <b>–ü—Ä—ã–∂–∫–∏ –Ω–∞ —Å–∫–∞–∫–∞–ª–∫–µ</b> ‚Äì 1 –º–∏–Ω—É—Ç–∞\n"
                "‚úä <b>–û—Ç–∂–∏–º–∞–Ω–∏—è</b> ‚Äì 20 —Ä–∞–∑\n"
                "ü¶µ <b>–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å –ø—Ä—ã–∂–∫–æ–º</b> ‚Äì 20 —Ä–∞–∑\n"
                "üßó <b>–°–∫–∞–ª–æ–ª–∞–∑</b> ‚Äì 30 —Å–µ–∫—É–Ω–¥\n"
                "‚è± <b>–ü–ª–∞–Ω–∫–∞</b> ‚Äì 45 —Å–µ–∫—É–Ω–¥"
            )
        },
        {
            "title": "üìÖ <b>–°–ø–ª–∏—Ç-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (3 –¥–Ω—è)</b>",
            "description": (
                "<i>–î–µ–Ω—å 1 (–ì—Ä—É–¥—å + –¢—Ä–∏—Ü–µ–ø—Å):</i>\n"
                "üõå <b>–ñ–∏–º —à—Ç–∞–Ω–≥–∏ –ª—ë–∂–∞</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8 —Ä–∞–∑\n"
                "‚úàÔ∏è <b>–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12 —Ä–∞–∑\n"
                "üëá <b>–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ –º–∞–∫—Å–∏–º—É–º—É\n"
                "üí™ <b>–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∂–∏–º</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 —Ä–∞–∑\n\n"

                "<i>–î–µ–Ω—å 2 (–°–ø–∏–Ω–∞ + –ë–∏—Ü–µ–ø—Å):</i>\n"
                "üôå <b>–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ –º–∞–∫—Å–∏–º—É–º—É\n"
                "üèãÔ∏è <b>–¢—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞–∫–ª–æ–Ω–µ</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8 —Ä–∞–∑\n"
                "üëú <b>–¢—è–≥–∞ –≥–∞–Ω—Ç–µ–ª–∏ –æ–¥–Ω–æ–π —Ä—É–∫–æ–π</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 —Ä–∞–∑\n"
                "üí™ <b>–ü–æ–¥—ä—ë–º —à—Ç–∞–Ω–≥–∏ –Ω–∞ –±–∏—Ü–µ–ø—Å</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12 —Ä–∞–∑\n\n"

                "<i>–î–µ–Ω—å 3 (–ù–æ–≥–∏ + –ü–ª–µ—á–∏):</i>\n"
                "ü¶µ <b>–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 8 —Ä–∞–∑\n"
                "‚¨ÜÔ∏è <b>–†—É–º—ã–Ω—Å–∫–∞—è —Ç—è–≥–∞</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 —Ä–∞–∑\n"
                "ü™ë <b>–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å–∏–¥—è</b> ‚Äì 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 —Ä–∞–∑\n"
                "‚úàÔ∏è <b>–ú–∞—Ö–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—ã</b> ‚Äì 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 —Ä–∞–∑"
            )
        }
    ]
    rand_tr = random.choice(traning_list)
    await message.answer(rand_tr['title'], parse_mode='HTML')
    await message.answer(rand_tr['description'], parse_mode='HTML')

    await bot.send_chat_action(message.chat.id, action='upload_audio')

    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç HTML-—Ç–µ–≥–æ–≤ –∏ —ç–º–æ–¥–∑–∏
    clean_text = re.sub('<[^<]+?>', '', rand_tr['description'])  # –£–¥–∞–ª—è–µ–º HTML-—Ç–µ–≥–∏
    clean_text = re.sub(r'[^\w\s.,!?-]', '', clean_text)  # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã

    tts = gTTS(text=clean_text, lang='ru')
    tts.save(f'tmp/{message.from_user.id}.ogg')
    audio = FSInputFile(f'tmp/{message.from_user.id}.ogg')
    await bot.send_voice(message.chat.id, audio)
    os.remove(f'tmp/{message.from_user.id}.ogg')

@dp.message(F.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò')
async def aitext(message: Message):
    await message.answer('–ò–ò - —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–∏ÃÜ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')

@dp.message(F.photo)
async def reactphoto(message: Message):
    list = ['–Ω–æ—Ä–º —Ñ–æ—Ç–∫–∞', '–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ —ç—Ç–æ', '–ø—Ä–∏—à–ª–∏ –µ—â–µ —Ç–∞–∫—É—é —Ñ–æ—Ç–∫—É']
    rand_answer = random.choice(list)
    await message.answer(rand_answer)
    await bot.download(message.photo[-1], destination=f'tmp/{message.photo[-1].file_id}.jpg')

@dp.message(Command('photo'))
async def photo(message: Message):
    list = [
        'https://ru.freepik.com/premium-photo/curved-steel-abstract-wallpaper-blue-ribbed-metal-3d-render_35146939.htm#fromView=keyword&page=1&position=5&uuid=27689733-362c-4bfe-8e9f-2d4cba254921&query=%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%86%D0%B8%D0%B8',
        'https://ru.freepik.com/free-photo/stylish-blue-curve-lines-abstract-background_15829525.htm#fromView=keyword&page=1&position=41&uuid=27689733-362c-4bfe-8e9f-2d4cba254921&query=%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%86%D0%B8%D0%B8',
        'https://ru.freepik.com/free-photo/elegant-smooth-wavy-lines-flow-background_15829559.htm#fromView=image_search_similar&page=1&position=15&uuid=82b79214-f1cf-4191-9c8b-2d3b4567e112&query=%D0%90%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%86%D0%B8%D0%B8'
    ]
    rand_photo = random.choice(list)
    await message.answer_photo(photo=rand_photo, caption='—ç—Ç–æ —Ñ–æ—Ç–∫–∞')

@dp.message(Command('help'))
async def help(message: Message):
    await message.answer('—ç—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã \n /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ \n /help - –ø–æ–º–æ—â—å \n /photo - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è\n /weather <–≥–æ—Ä–æ–¥> - –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã')

class WeatherStates(StatesGroup):
    waiting_for_city = State()

@dp.message(Command('weather'))
async def weather_command(message: Message, state: FSMContext):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã:')
    await state.set_state(WeatherStates.waiting_for_city)

@dp.message(WeatherStates.waiting_for_city)
async def process_city(message: Message, state: FSMContext):
    city = message.text.strip()
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status != 200:
                await message.answer('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.')
                await state.clear()
                return
            data = await resp.json()
            if data.get('cod') != 200:
                await message.answer('–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
                await state.clear()
                return
            weather_desc = data['weather'][0]['description'].capitalize()
            temp = data['main']['temp']
            feels_like = data['main']['feels_like']
            humidity = data['main']['humidity']
            wind_speed = data['wind']['speed']
            answer = (f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:\n"
                      f"{weather_desc}\n"
                      f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                      f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                      f"–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å")
            await message.answer(answer)
    await state.clear()

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.full_name}, —è –±–æ—Ç!')

@dp.message(F.text.lower() == '—Ç–µ—Å—Ç')
async def test(message: Message):
    await message.answer('–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')

# @dp.message()
# async def echo(message: Message):
#     await message.send_copy(chat_id=message.from_user.id)

@dp.message(F.text & ~F.text.startswith('/'))
async def translate_to_english(message: Message):
    text = message.text
    try:
        translated = GoogleTranslator(source='auto', target='en').translate(text)
        await message.answer(translated)
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: {e}")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())